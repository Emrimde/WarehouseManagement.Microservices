services:
  productservice.api:
    image: ${DOCKER_REGISTRY-}productserviceapi
    build:
      context: .
      dockerfile: ProductMicroservice.API/Dockerfile
    environment:
        - HOST=db
        - USERNAME=postgres
        - PASSWORD=admin
        - DATABASE=ProductsDb
        - ASPNETCORE_ENVIRONMENT=Development
        - REDIS_HOST=redis
        - REDIS_PORT=6379
        - RabbitMQ_HOSTNAME=rabbitmqq
        - RabbitMQ_USERNAME=user
        - RabbitMQ_PASSWORD=admin
        - RabbitMQ_PORT=5672
        - RabbitMQ_ProductExchange=product.exchange
    ports:
        - 5049:8080
        - 7112:8081
    networks:
        - product-postgres-network
        - warehouse-network

  # inventorymicroservice.api:
  #   image: inventory-microservice:v1.1
  #   environment:
  #       - HOST=inventory-db
  #       - USERNAME=postgres
  #       - PASSWORD=admin
  #       - DATABASE=Inventoriesdb
  #       - PORT=5432
  #       - ASPNETCORE_ENVIRONMENT=Development
  #       - REDIS_HOST=redis
  #       - REDIS_PORT=6379
  #       - RabbitMQ_HOSTNAME=rabbitmqq  
  #       - RabbitMQ_USERNAME=user
  #       - RabbitMQ_PASSWORD=admin
  #       - RabbitMQ_PORT=5672
  #       - RabbitMQ_ProductExchange=product.exchange
  #   entrypoint: ["sh", "-c", "sleep 10 && dotnet InventoryMicroservice.API.dll"]
  #   ports:
  #       - 5054:8080
  #       - 7115:8081
  #   networks:
  #       - inventory-postgres-network
  #       - warehouse-network
  #   depends_on:
  #       - rabbitmqq
  
  # ordermicroservice.api:
  #   image: order-microservice:v1.2
  #   ports:
  #       - 5055:8080
  #       - 5056:8081
  #   networks:
  #       - warehouse-network
  #       - order-postgres-network
  #   environment:
  #       - DB_NAME=OrdersDb
  #       - DB_PORT=5432
  #       - DB_PASSWORD=admin
  #       - DB_HOST=order-db
  #       - DB_USERNAME=postgres
  #       - ASPNETCORE_ENVIRONMENT=Development

  # order-db:
  #   image: postgres:latest
  #   ports:
  #       - 5433:5432
  #   volumes:
  #       - ./order-postgres-init:/docker-entrypoint-initdb.d
  #   environment:
  #       - POSTGRES_USER=postgres
  #       - POSTGRES_PASSWORD=admin
  #       - POSTGRES_DB=OrdersDb
  #   networks:
  #       - order-postgres-network
        

  # inventory-db:
  #   image: postgres:latest
  #   ports:
  #       - 5434:5432
  #   volumes:
  #       - ./inventory-postgres-init:/docker-entrypoint-initdb.d
  #   networks:
  #       - inventory-postgres-network
  #   environment:
  #       - POSTGRES_USER=postgres
  #       - POSTGRES_PASSWORD=admin
  #       - POSTGRES_DB=Inventoriesdb

  db:
    image: postgres:latest
    ports:
        - 5432:5432
    volumes:
        - ./postgres-init:/docker-entrypoint-initdb.d
    networks:
        - product-postgres-network
    environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=admin
        - POSTGRES_DB=ProductsDb

  redis:
    image: redis:latest
    ports:
        - 6379:6379
    networks:
        - warehouse-network
    volumes:
        - c:/Users/lapkomputer/source/repos/WarehouseManagement.Microservices/redis-cache:/data

  apigateway:
    image: apigateway
    build:
        context: ../WarehouseApiGateway
        dockerfile: WarehouseApiGateway/Dockerfile
    ports:
        - 5000:8080
    networks:
        - warehouse-network

  rabbitmqq:
    image: rabbitmq:3.13-management
    ports:
        - 5672:5672   
        - 15672:15672  
    environment:
        - RABBITMQ_DEFAULT_USER=user  
        - RABBITMQ_DEFAULT_PASS=admin 
    networks:
        - warehouse-network

networks:
    product-postgres-network:
        driver: "bridge"
    inventory-postgres-network:
        driver: "bridge"
    order-postgres-network:
        driver: "bridge"
    warehouse-network:
        driver: "bridge"



